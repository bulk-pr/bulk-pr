---
name: Update versions to 0.0.2
on:
  workflow_call:
    inputs:
      dir:
        type: string
        description: Directory to update. e.g. foo
        required: false
        default: ''
      dry_run:
        description: Run the workflow in dry-run mode
        type: boolean
        required: false
        default: false
    secrets:
      APP_PRIVATE_KEY:
        description: The private key of the GitHub App which has permission to create a pull request
        required: true
      SECUREFIX_CLIENT_PRIVATE_KEY:
        description: The private key of the GitHub App which has permission to create a pull request via SecureFix
        required: true

  workflow_dispatch:
    inputs:
      dir:
        description: Directory to update. e.g. foo
        required: false
        default: ''
      dry_run:
        description: Run the workflow in dry-run mode
        type: boolean
        required: false
        default: false
env:
  PROJECT_NUMBER: "3"
  REPO: test-1
  VERSION: "0.0.2"
jobs:
  list:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions: {}
    outputs:
      targets: ${{steps.list.outputs.result}}
    steps:
      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: token
        with:
          app-id: ${{vars.APP_ID}}
          private-key: ${{secrets.APP_PRIVATE_KEY}}
          owner: ${{github.repository_owner}}
          repositories: |
            ${{env.REPO}}
          permission-contents: read
          permission-pull-requests: read
          permission-organization-projects: read

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{steps.token.outputs.token}}
          repository: ${{github.repository_owner}}/${{env.REPO}}
          persist-credentials: false

      - id: dirs
        env:
          DIR: ${{inputs.dir}}
        run: |
          if [ -n "${DIR}" ]; then
            {
              echo "value<<EOF"
              echo "${DIR}"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
            exit 0
          fi

          {
            echo "value<<EOF"
            git ls-files | grep -E "/VERSION$" | xargs -r -n 1 dirname
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: List branches which already have pull requests
        id: branches
        env:
          GH_TOKEN: ${{steps.token.outputs.token}}
        run: |
          {
            echo "value<<EOF"
            gh api graphql --paginate --slurp -f query='
            query($endCursor: String) {
              search(first: 100, query:"is:pr repo:${{github.repository_owner}}/${{env.REPO}} project:${{github.repository_owner}}/${{env.PROJECT_NUMBER}}", type:ISSUE, after:$endCursor) {
                pageInfo {
                  hasNextPage
                  endCursor
                }
                nodes {
                  ... on PullRequest {
                    headRefName
                  }
                }
              }
            }
            ' | jq "[.[].data.search.nodes[].headRefName] | unique"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - id: list
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        env:
          DIRS: ${{steps.dirs.outputs.value}}
          BRANCHES: ${{steps.branches.outputs.value}}
        with:
          script: |
            const dirs = (process.env.DIRS || '').split('\n').filter(x => x !== '');
            const branches = new Set(JSON.parse(process.env.BRANCHES));
            const targets = [];
            for (const dir of dirs) {
              const branch = `bulk-pr/update-version/${process.env.VERSION}/${dir}`;
              if (!branches.has(branch)) {
                targets.push({
                  dir: dir,
                  branch: branch,
                });
              }
            }
            console.log({
              dirs: dirs,
              branches: [...branches],
              targets: targets,
            });
            return targets.slice(0, 256);

  create-pr:
    if: "join(fromJSON(needs.list.outputs.targets), '') != ''"
    runs-on: ubuntu-24.04
    name: create pr (${{matrix.target.dir}})
    timeout-minutes: 10
    permissions: {}
    needs: [list]
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.list.outputs.targets)}}
    env:
      DIR: ${{matrix.target.dir}}
      BRANCH: ${{matrix.target.branch}}
    steps:
      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: token
        with:
          app-id: ${{vars.APP_ID}}
          private-key: ${{secrets.APP_PRIVATE_KEY}}
          owner: ${{github.repository_owner}}
          repositories: |
            ${{env.REPO}}
          permission-contents: read

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{steps.token.outputs.token}}
          repository: ${{github.repository_owner}}/${{env.REPO}}
          persist-credentials: false

      - run: echo "$VERSION" > "${DIR}/VERSION"

      - if: ${{ inputs.dry_run || github.ref_name != 'main' }}
        name: Show diff (Dry run mode)
        uses: bulk-pr/diff-action@d10770b8facffce07143231268942b34418bb67b # v0.0.1

      - if: ${{ !inputs.dry_run && github.ref_name == 'main' }}
        name: Create PR
        uses: csm-actions/securefix-action@038b1b962c37adef7a6612aa91cbfc4d6644feb1 # v0.3.4
        with:
          app_id: ${{vars.SECUREFIX_CLIENT_APP_ID}}
          app_private_key: ${{secrets.SECUREFIX_CLIENT_PRIVATE_KEY}}
          server_repository: securefix-server
          repository: ${{github.repository_owner}}/${{env.REPO}}
          branch: ${{env.BRANCH}}
          pull_request_title: "chore: Update the version to ${{env.VERSION}} (${{env.DIR}})"
          pull_request_base_branch: main
          pull_request_body: |
            ## What?

            This PR updates the version to ${{env.VERSION}}.

            ## Why?

            Keep the version up-to-date.

            ## Note

            [@${{github.actor}} created this pull request by GitHub Actions.](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}})
          project_owner: ${{github.repository_owner}}
          project_number: ${{env.PROJECT_NUMBER}}
