---
name: pin actions
on:
  workflow_call:
    inputs:
      repo:
        type: string
        description: Repository name. e.g. test-1
        required: false
        default: ''
      dry_run:
        description: Run the workflow in dry-run mode
        type: boolean
        required: false
        default: false
    secrets:
      APP_PRIVATE_KEY:
        description: The private key of the GitHub App which has permission to create a pull request
        required: true
      SECUREFIX_CLIENT_PRIVATE_KEY:
        description: The private key of the GitHub App which has permission to create a pull request via SecureFix
        required: true

  workflow_dispatch:
    inputs:
      repo:
        description: Repository name. e.g. test-1
        required: false
        default: ''
      dry_run:
        description: Run the workflow in dry-run mode
        type: boolean
        required: false
        default: false

jobs:
  list:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions: {}
    outputs:
      targets: ${{steps.list.outputs.result}}
    steps:
      - uses: actions/create-github-app-token@bf559f85448f9380bcfa2899dbdc01eb5b37be3a # v3.0.0-beta.2
        id: token
        with:
          app-id: ${{vars.APP_ID}}
          private-key: ${{secrets.APP_PRIVATE_KEY}}
          owner: ${{github.repository_owner}}
          permission-contents: read
          permission-pull-requests: read
          permission-organization-projects: read

      - name: List all repositories
        id: repos
        env:
          GH_TOKEN: ${{steps.token.outputs.token}}
          REPO: ${{inputs.repo}}
        run: |
          if [ -n "${REPO}" ]; then
            {
              echo "value<<EOF"
              echo "[\"${REPO}\"]"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
            exit 0
          fi

          {
            echo "value<<EOF"
            gh repo list "$GITHUB_REPOSITORY_OWNER" \
              -L 10000 \
              --json name \
              --jq '[.[] | .name]'
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: List repositories which already have pull requests
        id: repos_with_prs
        env:
          GH_TOKEN: ${{steps.token.outputs.token}}
          REPO: ${{inputs.repo}}
        run: |
          {
            echo "value<<EOF"
            gh api graphql --paginate --slurp -f query='
            query($endCursor: String) {
              search(first: 100, query:"is:pr project:bulk-pr/2", type:ISSUE, after:$endCursor) {
                pageInfo {
                  hasNextPage
                  endCursor
                }
                nodes {
                  ... on PullRequest {
                    repository {
                      name
                    }
                  }
                }
              }
            }
            ' | jq '[.[] | .data.search.nodes | [.[] | .repository.name]] | add | unique'
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - id: list
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        env:
          REPOS: ${{steps.repos.outputs.value}}
          REPOS_WITH_PR: ${{steps.repos_with_prs.outputs.value}}
        with:
          script: |
            const repos = JSON.parse(process.env.REPOS);
            const reposWithPR = new Set(JSON.parse(process.env.REPOS_WITH_PR));
            const targets = repos.filter(item => !reposWithPR.has(item));
            console.log({
              repos: repos,
              reposWithPR: [...reposWithPR],
              targets: targets,
            });
            return targets.slice(0, 256);

  create-pr:
    if: "join(fromJSON(needs.list.outputs.targets), '') != ''"
    name: create pr (${{matrix.target}})
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read
    needs: [list]
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.list.outputs.targets)}}
    env:
      REPO: ${{matrix.target}}
      BULK_DIR: bulk-pr-${{github.run_id}}
    steps:
      - uses: actions/create-github-app-token@bf559f85448f9380bcfa2899dbdc01eb5b37be3a # v3.0.0-beta.2
        id: token
        with:
          app-id: ${{vars.APP_ID}}
          private-key: ${{secrets.APP_PRIVATE_KEY}}
          owner: ${{github.repository_owner}}
          repositories: |
            ${{env.REPO}}
          permission-contents: read

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{steps.token.outputs.token}}
          path: ${{env.REPO}}
          repository: ${{github.repository_owner}}/${{env.REPO}}
          persist-credentials: false
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ${{env.BULK_DIR}}
          persist-credentials: false

      - uses: aquaproj/aqua-installer@ea518c135a02fc11ff8024364510c181a5c6b342 # v4.0.3
        with:
          aqua_version: v2.55.0
          working_directory: ${{env.BULK_DIR}}/tasks/pinact
      - run: echo "AQUA_GLOBAL_CONFIG=${GITHUB_WORKSPACE}/${BULK_DIR}/tasks/pinact/aqua/aqua.yaml" >> "$GITHUB_ENV"
      - run: pinact -v
        working-directory: ${{env.REPO}}
        env:
          AQUA_GITHUB_TOKEN: ${{github.token}}
      - run: |
          # ignore errors
          pinact run || :
        working-directory: ${{env.REPO}}
        env:
          GITHUB_TOKEN: ${{github.token}}

      - if: ${{ inputs.dry_run || github.ref_name != 'main' }}
        name: Show diff (Dry run mode)
        working-directory: ${{env.REPO}}
        run: |
          echo "::notice:: Dry run mode. Skipping creating a pull request."
          git status
          echo "---"
          echo ""
          git diff
          echo "---"
          echo ""
          git ls-files --others --exclude-standard | while read -r file; do
            echo "New file ($file):"
            cat $file
            echo "---"
            echo ""
          done

      - if: ${{ !inputs.dry_run && github.ref_name == 'main' }}
        name: Create PR
        uses: csm-actions/securefix-action@038b1b962c37adef7a6612aa91cbfc4d6644feb1 # v0.3.4
        with:
          app_id: ${{vars.SECUREFIX_CLIENT_APP_ID}}
          app_private_key: ${{secrets.SECUREFIX_CLIENT_PRIVATE_KEY}}
          server_repository: securefix-server
          repository: ${{github.repository_owner}}/${{env.REPO}}
          root_dir: ${{env.REPO}}
          branch: bulk-pr/pinact
          pull_request_title: "chore: pin actions"
          project_owner: bulk-pr
          project_number: 2
          pull_request_body: |
            ## What?

            This PR pins GitHub Actions using [pinact](https://github.com/suzuki-shunsuke/pinact).

            ## Why?

            Pinning GitHub Actions improves security and stability of GitHub Actions workflows.

            ## Note

            [@${{github.actor}} created this pull request by GitHub Actions.](${{github.server_url}}/${{github.repository_owner}}/${{github.repository}}/actions/runs/${{github.run_id}})
